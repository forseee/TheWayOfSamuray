{"version":3,"sources":["Components/Profile/MyPosts/MyPosts.module.css","Components/Profile/MyPosts/Post1/Post1.jsx","Components/Profile/MyPosts/MyPosts.jsx","Components/Profile/MyPosts/PostConteiner.jsx","Components/Profile/ProfileInfo/ProfileStatus.jsx","Components/Profile/ProfileInfo/ProfileInfo.jsx","Components/Profile/Profile.jsx","Redux/profile-selectors.js","Components/Profile/ProfileConteiner.jsx","Components/Profile/MyPosts/Post1/Post1.module.css"],"names":["module","exports","Post1","props","className","classcss","content","item","src","message","like","validate","value","errorMessage","MyForm","initialValues","text","errors","touched","handleSubmit","onSubmit","name","component","placeholder","type","MyPosts","console","log","postsElements","posts","map","m","key","id","likes","postBlock","addPostAction","massageBlock","MyPostsConteiner","connect","state","profilePage","newPostText","dispatch","addPostActionCreator","ProfileStatus","useState","status","setStatus","editMode","setEditMode","useEffect","onDoubleClick","onChange","e","currentTarget","autoFocus","onBlur","updateStatus","ProfileInfo","profile","photos","large","Preloader","Profile","getProfile","getIsAuth","auth","isAuth","getprofileStatus","getAuthId","ProfileConteiner","userId","this","match","params","autorizeUserId","history","push","axios","then","response","setProfileInfo","data","getStatusThankCreator","updateStatusThankCreator","React","Component","compose","withRouter"],"mappings":"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","file":"static/js/3.c9e801ed.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"postBlock\":\"MyPosts_postBlock__3n6r5\",\"massageBlock\":\"MyPosts_massageBlock__fgmsu\"};","import React from 'react';\r\nimport classcss from './Post1.module.css'\r\n\r\nfunction Post1(props){\r\n    return (\r\n        <div className={classcss.content}>\r\n\r\n        <div className={classcss.item}> \r\n                <img src='https://www.meme-arsenal.com/memes/7bdea6754f999b50e9577596f09197fb.jpg'/> \r\n               \r\n                {props.message}\r\n\r\n                <div>\r\n                <span>Like</span>\r\n                </div>\r\n                \r\n                <div>\r\n               {props.like}\r\n               </div>\r\n               \r\n        </div>\r\n        \r\n        </div>\r\n    )     \r\n}\r\n\r\nexport default Post1;","import React from \"react\";\r\nimport Post1 from \"./Post1/Post1\";\r\nimport classcss from \"./MyPosts.module.css\";\r\nimport { Formik, Form, Field } from \"formik\";\r\n\r\nconst validate = (value) => {\r\n  let errorMessage;\r\n  if (!value) {\r\n    errorMessage = \"Field is requared\";\r\n  }\r\n  return errorMessage;\r\n};\r\n\r\nconst MyForm = (props) => {\r\n  return (\r\n    <Formik initialValues={{ text: \"\" }}>\r\n      {({ errors, touched, handleSubmit }) => {\r\n        return (\r\n          <Form onSubmit={handleSubmit}>\r\n            <h2>My Post</h2>\r\n            <Field\r\n              validate={validate}\r\n              name=\"text\"\r\n              component=\"TextArea\"\r\n              placeholder=\"Место для воода поста\"\r\n            />\r\n            <div>\r\n              <button type=\"submit\">Добавить пост</button>\r\n            </div>\r\n          </Form>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nconst TextArea = ({ field, form, ...props }) => {\r\n  return <textarea type=\"text\" {...props} {...form} {...field} />;\r\n};\r\n\r\nconst MyPosts = (props) => {\r\n  console.log('render');\r\n  let postsElements = props.posts.map((m) => (\r\n    <Post1 key={m.id} message={m.message} like={m.likes} />\r\n  ));\r\n\r\n  let addPost = (value) => {\r\n    props.addPostAction(value.text);\r\n  };\r\n\r\n  return (\r\n    <div className={classcss.postBlock}>\r\n      <MyForm onSubmit={addPost} />\r\n\r\n      <div className={classcss.massageBlock}>{postsElements}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyPosts;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addPostActionCreator} from '../../../Redux/profiel-reducer';\r\nimport MyPosts from './MyPosts'\r\n\r\n\r\n// const MyPostsConteiner = (props) => {\r\n\r\n//     return (\r\n//         <StoreContext.Consumer>{\r\n\r\n//             store => {\r\n\r\n//                 function addPost() {\r\n//                     store.dispatch(addPostActionCreator())\r\n//                 }\r\n\r\n//                 function onPostChange(text) {\r\n//                     store.dispatch(updateNewPostTextActionCreator(text))\r\n//                 }\r\n\r\n//                 return (\r\n//                     <MyPosts addPostAction={addPost}\r\n//                         updateNewPostTextAction={onPostChange}\r\n//                         posts={store.getState().profilePage.posts}\r\n//                         newPostText={store.getState().profilePage.newPostText} />\r\n//                 )\r\n//             }}\r\n\r\n//         </StoreContext.Consumer>)\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPostAction: (text) => dispatch(addPostActionCreator(text))\r\n    }\r\n}\r\n\r\nconst MyPostsConteiner = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsConteiner;","import React, { useState, useEffect } from \"react\";\r\n\r\nconst ProfileStatus = (props) => {\r\n  let [status, setStatus] = useState(props.status);\r\n  let [editMode, setEditMode] = useState(false);\r\n\r\n  const diactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n\r\n  const changeStatus = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  return (\r\n    <div>\r\n      {!editMode && (\r\n        <div>\r\n          <span onDoubleClick={() => setEditMode(true)}>\r\n            {props.status || \"-----\"}\r\n          </span>\r\n        </div>\r\n      )}\r\n\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            onChange={changeStatus}\r\n            autoFocus={true}\r\n            onBlur={diactivateEditMode}\r\n            value={status}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileStatus;\r\n","import React from 'react';\r\nimport Preloader from '../../Users/Preloader';\r\nimport ProfileStatus from './ProfileStatus';\r\n\r\n\r\nconst  ProfileInfo = ({profile, ...props }) =>  {\r\n    if(!profile){\r\n        return <Preloader />\r\n    }\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img src='https://www.gettyimages.pt/gi-resources/images/Homepage/Hero/PT/PT_hero_42_153645159.jpg' />\r\n            </div>\r\n            <div>\r\n                <img src = {profile.photos.large}/> \r\n                <ProfileStatus status={props.status} updateStatus= {props.updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileInfo","import React from 'react';\r\nimport MyPostsConteiner from './MyPosts/PostConteiner';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\nconst Profile = (props) =>  {\r\n\r\n    return (\r\n        <div>\r\n            < ProfileInfo profile={props.profile} status={props.status} updateStatus= {props.updateStatus}/>\r\n            < MyPostsConteiner/>\r\n        </div>\r\n    )     \r\n}\r\n\r\nexport default Profile;","export const getProfile = (state) => {\r\n  return state.profilePage.profile;\r\n};\r\n\r\nexport const getIsAuth = (state) => {\r\n  return state.auth.isAuth;\r\n};\r\n\r\nexport const getprofileStatus = (state) => {\r\n  return state.profilePage.status;\r\n};\r\n\r\nexport const getAuthId = (state) => {\r\n  return state.auth.id;\r\n};\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {\r\n  setProfileInfo,\r\n  getStatusThankCreator,\r\n  updateStatusThankCreator,\r\n} from \"../../Redux/profiel-reducer\";\r\nimport * as axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport {\r\n  getAuthId,\r\n  getIsAuth,\r\n  getProfile,\r\n  getprofileStatus,\r\n} from \"../../Redux/profile-selectors\";\r\n\r\nclass ProfileConteiner extends React.Component {\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n\r\n    if (!userId) {\r\n      userId = this.props.autorizeUserId;\r\n      if (!userId) {\r\n        this.props.history.push(\"/login\");\r\n      }\r\n    }\r\n\r\n    axios\r\n      .get(`https://social-network.samuraijs.com/api/1.0/profile/` + userId)\r\n      .then((response) => {\r\n        this.props.setProfileInfo(response.data);\r\n      });\r\n\r\n    this.props.getStatusThankCreator(userId);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatusThankCreator}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    profile: getProfile(state),\r\n    isAuth: getIsAuth(state),\r\n    status: getprofileStatus(state),\r\n    autorizeUserId: getAuthId(state),\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    setProfileInfo,\r\n    getStatusThankCreator,\r\n    updateStatusThankCreator,\r\n  }),\r\n  withRouter\r\n)(ProfileConteiner);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Post1_content__37mH8\",\"item\":\"Post1_item__3-58i\"};"],"sourceRoot":""}