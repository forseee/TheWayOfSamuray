{"version":3,"sources":["Components/api/api.js","Components/Users/Preloader.jsx","Components/Users/Pagination.module.css","Components/Header/Header.module.css","Redux/profiel-reducer.js","Redux/dialogs-reducer.js","Components/Navbar/Navbar.module.css","Components/IMG/Spinner-1.5s-224px.svg","serviceWorker.js","Components/Navbar/Navbar.jsx","utilits/object-helpers.jsx","Redux/users-reducer.js","Components/Users/Pagination.jsx","Components/Users/User.jsx","Components/Users/Users.jsx","Redux/users-selectors.js","Components/Users/UsersConteiner.jsx","Components/Header/Header.jsx","Redux/auth-reducer.js","Components/Header/HederConteiner.jsx","Components/Login/Login.jsx","Components/Navbar/News/News.jsx","Redux/app-reducer.js","Redux/redux-store.js","App.js","index.js"],"names":["instance","axios","withCredentials","baseURL","headers","userApi","getUser","currentPage","pageSize","get","then","response","data","deleteUser","userId","delete","postUser","post","profileApi","getStatus","updateStatus","status","put","authme","login","email","password","rememberMe","logout","Preloader","src","preloader","module","exports","ADD_POST","SET_PROPFILE_INFO","SET_STATUS","initialState","posts","id","message","likes","profile","addPostActionCreator","text","type","setStatus","setProfileInfo","getStatusThankCreator","dispatch","a","updateStatusThankCreator","resultCode","profileReducer","state","action","dialogs","name","messages","newMessageBody","sendMassageCreator","updateNewMessageBadyCreator","bady","newBady","dialogsReducer","newMassage","Boolean","window","location","hostname","match","Navbar","className","classcss","nav","item","to","activeClassName","activeLink","active","updateObjInArray","items","objPropName","newObjProp","map","user","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS","TOGGLE_TO_LOADER","users","totalUsersCount","isFetching","follow","unfollow","toggleToLoader","followUnfollowFlow","apiMethod","actionCreator","usersReducer","followed","totalUsers","Paginator","changeCurrentPage","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","paginator","onClick","filter","p","cn","selectedPage","pageNumber","key","e","User","unFollowUserThankCreator","followUserThankCreator","photos","small","Users","props","getUsers","usersPage","getPageSize","getTotalUsersCount","getcurrentPage","getIsFetching","UsersConteinerComponent","page","getUserThunkCreator","setCurrentPage","this","React","Component","UserConteiner","connect","totalCount","bind","Header","header","loginBlock","isAuth","LogoutUserTC","SET_USER_AUTH","setAuthUser","payload","getAuthUserTC","authReducer","HeaderConteiner","auth","Login","useDispatch","useSelector","initialValues","validate","values","errors","onSubmit","setSubmitting","isSubmitting","placeholder","component","disabled","News","INITIALIZE_APP","initialized","appReducer","reducers","combineReducers","profilePage","dialogsPage","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","__store__","DialogsContainer","lazy","ProfileContainer","App","initializeApp","path","render","Suspense","fallback","UsersConteiner","AppConteiner","withRouter","SamuraiJSApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.2b5312f3.chunk.js","sourcesContent":["import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  withCredentials: true,\r\n  baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n  headers: {\r\n    \"API-KEY\": \"cc04c49f-da84-4c6c-9a4d-92c62f81b89c\",\r\n  },\r\n});\r\n\r\nexport const userApi = {\r\n  getUser(currentPage, pageSize) {\r\n    return instance\r\n      .get(`users?page=${currentPage}&count=${pageSize}`)\r\n      .then((response) => response.data);\r\n  },\r\n\r\n  deleteUser(userId) {\r\n    return instance\r\n      .delete(`follow/${userId}`)\r\n      .then((response) => response.data);\r\n  },\r\n\r\n  postUser(userId) {\r\n    return instance\r\n      .post(`follow/${userId}`, {})\r\n      .then((response) => response.data);\r\n  },\r\n};\r\n\r\nexport const profileApi = {\r\n  getStatus(userId) {\r\n    return instance.get(`profile/status/${userId}`);\r\n  },\r\n\r\n  updateStatus(status) {\r\n    return instance.put(`profile/status`, { status: status });\r\n  },\r\n  authme() {\r\n    return instance.get(`auth/me`);\r\n  },\r\n  login(email, password, rememberMe = false) {\r\n    return instance.post(`auth/login`, { email, password, rememberMe });\r\n  },\r\n\r\n  logout() {\r\n    return instance.delete(`auth/login`);\r\n  },\r\n};\r\n","import React from \"react\";\r\nimport preloader from \"../IMG/Spinner-1.5s-224px.svg\";\r\n\r\nlet Preloader = () => {\r\n  return <img src={preloader} />;\r\n};\r\n\r\nexport default Preloader;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Pagination_paginator__35ytz\",\"pageNumber\":\"Pagination_pageNumber__Th9n9\",\"selectedPage\":\"Pagination_selectedPage__1fWev\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3y5Q3\",\"loginBlock\":\"Header_loginBlock__38Kh1\"};","import { profileApi } from \"../Components/api/api\";\r\n\r\nconst ADD_POST = \"samurai-network/profile/ADD_POST\";\r\nconst SET_PROPFILE_INFO = \"samurai-network/profile/SET_PROPFILE_INFO\";\r\nconst SET_STATUS = \"samurai-network/profile/SET_STATUS\";\r\n\r\nlet initialState = {\r\n  posts: [\r\n    { id: 1, message: \"Hey man what a you doing\", likes: 10 },\r\n    { id: 2, message: \"You a losser man\", likes: 51 },\r\n    { id: 3, message: \"React easy\", likes: 25 },\r\n    { id: 4, message: \"React easy\", likes: 25 },\r\n  ],\r\n  profile: null,\r\n  status: \"\",\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_POST:\r\n      return {\r\n        ...state,\r\n        posts: [...state.posts, { id: 5, message: action.text, likes: 10 }],\r\n      };\r\n\r\n    case SET_PROPFILE_INFO:\r\n      return {\r\n        ...state,\r\n        profile: action.profile,\r\n      };\r\n    case SET_STATUS:\r\n      return {\r\n        ...state,\r\n        status: action.status,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const addPostActionCreator = (text) => ({ type: ADD_POST, text });\r\n\r\nexport const setStatus = (status) => ({ type: SET_STATUS, status });\r\n\r\nexport const setProfileInfo = (profile) => ({\r\n  type: SET_PROPFILE_INFO,\r\n  profile,\r\n});\r\n\r\nexport const getStatusThankCreator = (userId) => async (dispatch) => {\r\n  let response = await profileApi.getStatus(userId);\r\n  dispatch(setStatus(response.data));\r\n};\r\n\r\nexport const updateStatusThankCreator = (status) => async (dispatch) => {\r\n  let response = await profileApi.updateStatus(status);\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(setStatus(status));\r\n  }\r\n};\r\n\r\nexport default profileReducer;\r\n","const UPDATE_NEW_MESSAGE_BADY = 'UPDATE_NEW_MESSAGE_BADY'\r\nconst SEND_MESSAGE = 'SEND_MESSAGE'\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        { id: 1, name: 'Leva' },\r\n        { id: 2, name: 'Ved' },\r\n        { id: 3, name: 'Lexa' },\r\n        { id: 4, name: 'Nekit' },\r\n        { id: 5, name: 'Kiril' },\r\n    ],\r\n    messages: [\r\n        { id: 1, message: 'Hey man what a you doing'},\r\n        { id: 2, message: 'You a losser man'},\r\n        { id: 3, message: 'React easy'},\r\n        { id: 4, message: 'React easy'}\r\n    ],\r\n    newMessageBody:''\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case UPDATE_NEW_MESSAGE_BADY:\r\n            return {\r\n                ...state,\r\n                newMessageBody:action.newBady,\r\n                }\r\n        \r\n        case SEND_MESSAGE:\r\n            let newMassage = state.newMessageBody  \r\n            return {\r\n                ...state,\r\n                messages:[...state.messages, {id:6, message: newMassage}],\r\n                newMessageBody:'',\r\n            };\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMassageCreator = () => ({ type: SEND_MESSAGE });\r\nexport const updateNewMessageBadyCreator = (bady) => ({ type: UPDATE_NEW_MESSAGE_BADY, newBady: bady });\r\n\r\n\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2My2L\",\"item\":\"Navbar_item__30k2B\",\"activeLink\":\"Navbar_activeLink__T8vDt\"};","module.exports = __webpack_public_path__ + \"static/media/Spinner-1.5s-224px.358377a4.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport classcss from './Navbar.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nfunction Navbar() {\r\n    return (\r\n        <nav className={classcss.nav}>\r\n            <div className={classcss.item}>\r\n                <NavLink to='/profile' activeClassName={classcss.activeLink} >Profile</NavLink>\r\n            </div>\r\n            <div className={`${classcss.item} ${classcss.active}`}>\r\n                <NavLink to='/dialogs' activeClassName={classcss.activeLink} >Messages</NavLink>\r\n            </div>\r\n            <div className={classcss.item}>\r\n                <NavLink to='/news' activeClassName={classcss.activeLink} >News</NavLink>\r\n            </div>\r\n            <div className={classcss.item}>\r\n                <NavLink to='/music' activeClassName={classcss.activeLink} >Music</NavLink>\r\n            </div>\r\n            <div className={classcss.item}>\r\n                <NavLink to='/settings' activeClassName={classcss.activeLink} >Settings</NavLink>\r\n            </div>\r\n            <div className={classcss.item}>\r\n                <NavLink to='/users' activeClassName={classcss.activeLink} >Users</NavLink>\r\n            </div>\r\n\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","\r\nexport const updateObjInArray = (items, userId, objPropName, newObjProp) => {\r\n  return items.map((user) => {\r\n    if (user[objPropName] === userId) {\r\n      return { ...user, ...newObjProp };\r\n    }\r\n    return user;\r\n  });\r\n};\r\n","import { userApi } from \"../Components/api/api\";\r\nimport { updateObjInArray } from \"../utilits/object-helpers\";\r\n\r\nconst FOLLOW = \"samurai-network/users/FOLLOW\";\r\nconst UNFOLLOW = \"samurai-network/users/UNFOLLOW\";\r\nconst SET_USERS = \"samurai-network/users/SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"samurai-network/users/SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_USERS = \"samurai-network/users/SET_TOTAL_USERS\";\r\nconst TOGGLE_TO_LOADER = \"samurai-network/users/TOGGLE_TO_LOADER\";\r\n\r\nlet initialState = {\r\n  users: [],\r\n  pageSize: 10,\r\n  totalUsersCount: 0,\r\n  currentPage: 1,\r\n  isFetching: false,\r\n};\r\n\r\nlet usersReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FOLLOW:\r\n      return {\r\n        ...state,\r\n        users: updateObjInArray(state.users, action.userId, \"id\", {\r\n          followed: true,\r\n        }),\r\n      };\r\n\r\n    case UNFOLLOW:\r\n      return {\r\n        ...state,\r\n        users: updateObjInArray(state.users, action.userId, \"id\", {\r\n          followed: false,\r\n        }),\r\n        \r\n      };\r\n\r\n    case SET_USERS:\r\n      return {\r\n        ...state,\r\n        users: [...action.users],\r\n      };\r\n\r\n    case SET_CURRENT_PAGE:\r\n      return {\r\n        ...state,\r\n        currentPage: action.currentPage,\r\n      };\r\n\r\n    case SET_TOTAL_USERS:\r\n      return {\r\n        ...state,\r\n        totalUsersCount: action.totalUsers,\r\n      };\r\n\r\n    case TOGGLE_TO_LOADER:\r\n      return {\r\n        ...state,\r\n        isFetching: action.isFetching,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const follow = (userId) => ({ type: FOLLOW, userId });\r\nexport const unfollow = (userId) => ({ type: UNFOLLOW, userId });\r\nexport const setUser = (users) => ({ type: SET_USERS, users });\r\nexport const setCurrentPage = (currentPage) => ({\r\n  type: SET_CURRENT_PAGE,\r\n  currentPage,\r\n});\r\nexport const setTotalUsers = (totalUsers) => ({\r\n  type: SET_TOTAL_USERS,\r\n  totalUsers,\r\n});\r\nexport const toggleToLoader = (isFetching) => ({\r\n  type: TOGGLE_TO_LOADER,\r\n  isFetching,\r\n});\r\n\r\nexport const getUserThunkCreator = (currentPage, pageSize) => {\r\n  return async (dispatch) => {\r\n    dispatch(toggleToLoader(true));\r\n    let data = await userApi.getUser(currentPage, pageSize);\r\n    dispatch(toggleToLoader(false));\r\n    dispatch(setUser(data.items));\r\n    dispatch(setTotalUsers(data.totalCount));\r\n  };\r\n};\r\n\r\nconst followUnfollowFlow = async (\r\n  dispatch,\r\n  userId,\r\n  apiMethod,\r\n  actionCreator\r\n) => {\r\n  let data = await apiMethod(userId);\r\n  if (data.resultCode === 0) {\r\n    dispatch(actionCreator(userId));\r\n  }\r\n};\r\n\r\nexport const unFollowUserThankCreator = (userId) => {\r\n  return async (dispatch) => {\r\n    followUnfollowFlow(\r\n      dispatch,\r\n      userId,\r\n      userApi.deleteUser.bind(userApi),\r\n      unfollow\r\n    );\r\n  };\r\n};\r\n\r\nexport const followUserThankCreator = (userId) => {\r\n  return async (dispatch) => {\r\n    followUnfollowFlow(\r\n      dispatch,\r\n      userId,\r\n      userApi.postUser.bind(userApi),\r\n      follow\r\n    );\r\n  };\r\n};\r\n\r\nexport default usersReducer;\r\n\r\n","import React, { useState } from \"react\";\r\nimport styles from \"./Pagination.module.css\";\r\nimport cn from \"classnames\";\r\n\r\nexport const Paginator = ({\r\n  totalUsersCount,\r\n  pageSize,\r\n  currentPage,\r\n  changeCurrentPage,\r\n  portionSize = 10,\r\n}) => {\r\n  let pagesCount = Math.ceil(totalUsersCount / pageSize);\r\n  let pages = [];\r\n  for (let i = 1; i <= pagesCount; i++) {\r\n    pages.push(i);\r\n  }\r\n\r\n  let portionCount = Math.ceil(pagesCount / portionSize);\r\n  let [portionNumber, setPortionNumber] = useState(1);\r\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n  let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n  return (\r\n    <div className={styles.paginator}>\r\n      {portionNumber > 1 && (\r\n        <button\r\n          onClick={() => {\r\n            setPortionNumber(portionNumber - 1);\r\n          }}\r\n        >\r\n          PREV\r\n        </button>\r\n      )}\r\n\r\n      {pages\r\n        .filter(\r\n          (p) => p >= leftPortionPageNumber && p <= rightPortionPageNumber\r\n        )\r\n        .map((p) => {\r\n          return (\r\n            <span\r\n              className={cn(\r\n                {\r\n                  [styles.selectedPage]: currentPage === p,\r\n                },\r\n                styles.pageNumber\r\n              )}\r\n              key={p}\r\n              onClick={(e) => {\r\n                changeCurrentPage(p);\r\n              }}\r\n            >\r\n              {p}\r\n            </span>\r\n          );\r\n        })}\r\n\r\n      {portionCount > portionNumber && \r\n        <button\r\n          onClick={() => {\r\n            setPortionNumber(portionNumber + 1);\r\n          }}\r\n        >\r\n          NEXT\r\n        </button>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./styles.css\";\r\n\r\nconst User = ({user, unFollowUserThankCreator, followUserThankCreator}) => {\r\n  \r\n  return (\r\n    <div key={user.id}>\r\n      <span>\r\n        <div>\r\n          <NavLink to={\"/profile/\" + user.id}>\r\n            <img\r\n              src={\r\n                user.photos.small\r\n                  ? user.photos.small\r\n                  : \"https://www.speexx.com/wp-content/uploads/icon-think-user-centric-1.png\"\r\n              }\r\n              className=\"userphoto\"\r\n            />\r\n          </NavLink>\r\n        </div>\r\n        <div>\r\n          {user.followed ? (\r\n            <button\r\n              onClick={() => {\r\n                unFollowUserThankCreator(user.id);\r\n              }}\r\n            >\r\n              UnFollow\r\n            </button>\r\n          ) : (\r\n            <button\r\n              onClick={() => {\r\n                followUserThankCreator(user.id);\r\n              }}\r\n            >\r\n              Follow\r\n            </button>\r\n          )}\r\n        </div>\r\n      </span>\r\n      <span>\r\n        <span>\r\n          <div>{user.name}</div>\r\n          <div>{user.status}</div>\r\n        </span>\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Paginator } from \"./Pagination\";\r\nimport \"./styles.css\";\r\nimport User from \"./User\";\r\n\r\nconst Users = ({users,totalUsersCount, pageSize, currentPage, changeCurrentPage, ...props}) => {\r\n\r\n  return (\r\n    <div>\r\n      <Paginator\r\n        totalUsersCount={totalUsersCount}\r\n        pageSize={pageSize}\r\n        currentPage={currentPage}\r\n        changeCurrentPage={changeCurrentPage}\r\n      />\r\n\r\n      {users.map((user) =><User key ={user.id} user={user} unFollowUserThankCreator ={props.unFollowUserThankCreator} followUserThankCreator={props.followUserThankCreator}/> )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","export const getUsers = (state ) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getPageSize = (state ) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state ) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\nexport const getcurrentPage = (state ) => {\r\n    return state.usersPage.currentPage\r\n}\r\nexport const getIsFetching = (state ) => {\r\n    return state.usersPage.isFetching\r\n}","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setCurrentPage,\r\n  getUserThunkCreator,\r\n  followUserThankCreator,\r\n  unFollowUserThankCreator,\r\n} from \"../../Redux/users-reducer\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"./Preloader\";\r\nimport {\r\n  getcurrentPage,\r\n  getIsFetching,\r\n  getPageSize,\r\n  getTotalUsersCount,\r\n  getUsers,\r\n} from \"../../Redux/users-selectors\";\r\n\r\nclass UsersConteinerComponent extends React.Component {\r\n  componentDidMount() {\r\n    this.props.getUserThunkCreator(this.props.currentPage, this.props.pageSize);\r\n  }\r\n\r\n  changeCurrentPage = (page) => {\r\n    this.props.getUserThunkCreator(page, this.props.pageSize);\r\n    this.props.setCurrentPage(page);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.props.isFetching ? <Preloader /> : null}\r\n        <Users\r\n          totalUsersCount={this.props.totalUsersCount}\r\n          pageSize={this.props.pageSize}\r\n          currentPage={this.props.currentPage}\r\n          changeCurrentPage={this.changeCurrentPage}\r\n          users={this.props.users}\r\n          followUserThankCreator={this.props.followUserThankCreator}\r\n          unFollowUserThankCreator={this.props.unFollowUserThankCreator}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    users: getUsers(state),\r\n    pageSize: getPageSize(state),\r\n    totalUsersCount: getTotalUsersCount(state),\r\n    currentPage: getcurrentPage(state),\r\n    isFetching: getIsFetching(state),\r\n  };\r\n};\r\n\r\nconst UserConteiner = connect(mapStateToProps, {\r\n  setCurrentPage,\r\n  getUserThunkCreator,\r\n  followUserThankCreator,\r\n  unFollowUserThankCreator,\r\n})(UsersConteinerComponent);\r\n\r\nexport default UserConteiner;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport classcss from \"./Header.module.css\";\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <header className={classcss.header}>\r\n      <img src=\"https://avatanplus.com/files/resources/mid/5815dbd5106d21581562b84b.png\" />\r\n\r\n      <div className={classcss.loginBlock}>\r\n        {props.isAuth ? (\r\n          <div>\r\n            {props.login}\r\n            <div>\r\n              <button onClick={props.LogoutUserTC}>logout</button>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <NavLink to={\"./login\"}>Login</NavLink>\r\n        )}\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { profileApi } from \"../Components/api/api\";\r\n\r\nconst SET_USER_AUTH = \"samurai-network/auth/SET_USER_AUTH\";\r\n\r\nlet initialState = {\r\n  id: null,\r\n  email: null,\r\n  login: null,\r\n  isAuth: false,\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_USER_AUTH:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setAuthUser = (id, email, login, isAuth) => ({\r\n  type: SET_USER_AUTH,\r\n  payload: { id, email, login, isAuth },\r\n});\r\n\r\nexport const getAuthUserTC = () => async (dispatch) => {\r\n  let response = await profileApi.authme();\r\n  if (response.data.resultCode === 0) {\r\n    let { id, email, login } = response.data.data;\r\n    dispatch(setAuthUser(id, email, login, true));\r\n  }\r\n};\r\n\r\nexport const LoginUserTC = (email, password, rememberMe) => async (\r\n  dispatch\r\n) => {\r\n  let response = await profileApi.login(email, password, rememberMe);\r\n  if (response.data.resultCode === 0) dispatch(getAuthUserTC());\r\n};\r\n\r\nexport const LogoutUserTC = () => async (dispatch) => {\r\n  let response = await profileApi.logout();\r\n  if (response.data.resultCode === 0)\r\n    dispatch(setAuthUser(null, null, null, false));\r\n};\r\n\r\nexport default authReducer;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Header from \"./Header\";\r\nimport { LogoutUserTC } from \"../../Redux/auth-reducer\";\r\n\r\nclass HeaderConteiner extends React.Component {\r\n  render() {\r\n    return <Header {...this.props} />;\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    login: state.auth.login,\r\n    isAuth: state.auth.isAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { LogoutUserTC })(HeaderConteiner);\r\n","import React from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { LoginUserTC } from \"../../Redux/auth-reducer\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst Login = () => {\r\n  const dispatch = useDispatch();\r\n  const isAuth = useSelector((state) => state.auth.isAuth);\r\n  if (isAuth) {\r\n    return <Redirect to={\"/profile\"} />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Login</h1>\r\n      <Formik\r\n        initialValues={{ email: \"\", password: \"\" }}\r\n        validate={(values) => {\r\n          const errors = {};\r\n          if (!values.email) {\r\n            errors.email = \"Required\";\r\n          }\r\n          return errors;\r\n        }}\r\n        onSubmit={(values, { setSubmitting }) => {\r\n          dispatch(LoginUserTC(values.email, values.password));\r\n          setSubmitting(false);\r\n        }}\r\n      >\r\n        {({ isSubmitting }) => (\r\n          <Form>\r\n            <Field type=\"email\" name=\"email\" placeholder=\"email\" />\r\n            <ErrorMessage name=\"email\" />\r\n            <div>\r\n              <Field type=\"password\" name=\"password\" placeholder=\"password\" />\r\n            </div>\r\n            <ErrorMessage name=\"password\" component=\"div\" />\r\n            <div>\r\n              <button type=\"submit\" disabled={isSubmitting}>\r\n                Login\r\n              </button>\r\n            </div>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport clascss from './News.module.css'\r\n\r\nconst News= (props) => {\r\n    \r\n    return <Redirect to='/login'/>\r\n}\r\n\r\nexport default News;","\r\nimport { getAuthUserTC } from \"./auth-reducer\";\r\n\r\nconst INITIALIZE_APP = \"samurai-network/app/INITIALIZE_APP\";\r\n\r\nlet initialState = {\r\n  initialized: false,\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case INITIALIZE_APP:\r\n      return {\r\n        ...state,\r\n        initialized: true,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const initializedSuccess = () => ({ type: INITIALIZE_APP });\r\n\r\nexport const initializeApp = () => async (dispatch) => {\r\n    let dispathResult = dispatch(getAuthUserTC())\r\n    dispathResult.then (()=> {\r\n        dispatch(initializedSuccess())\r\n    })\r\n  };\r\n\r\nexport default appReducer;\r\n\r\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport profileReducer from \"./profiel-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n  profilePage: profileReducer,\r\n  dialogsPage: dialogsReducer,\r\n  usersPage: usersReducer,\r\n  auth: authReducer,\r\n  app: appReducer,\r\n});\r\n\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  reducers,\r\n  composeEnhancers(applyMiddleware(thunkMiddleware))\r\n);\r\n\r\nwindow.__store__= store;\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./Components/Navbar/Navbar\";\nimport { Route, withRouter } from \"react-router-dom\";\nimport UsersConteiner from \"./Components/Users/UsersConteiner\";\nimport HeaderConteiner from \"./Components/Header/HederConteiner\";\nimport Login from \"./Components/Login/Login\";\nimport News from \"./Components/Navbar/News/News\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { initializeApp } from \"./Redux/app-reducer\";\nimport Preloader from \"./Components/Users/Preloader\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./Redux/redux-store\";\n\nconst DialogsContainer = React.lazy(() =>\n  import(\"./Components/Navbar/Dialogs/DialogConteiner\")\n);\nconst ProfileContainer = React.lazy(() =>\n  import(\"./Components/Profile/ProfileConteiner\")\n);\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.initializeApp();\n  }\n  render() {\n    if (!this.props.initialized) {\n      return <Preloader />;\n    }\n    return (\n      <div className=\"app-wrapper\">\n        <HeaderConteiner />\n        <Navbar />\n        <div className=\"app-wrapper-content\">\n          <Route\n            path=\"/dialogs\"\n            render={() => {\n              return (\n                <React.Suspense fallback={<Preloader/>}>\n                  <DialogsContainer />\n                </React.Suspense>\n              );\n            }}\n          />\n          <Route\n            path=\"/profile/:userId?\"\n            render={() => {\n              return (\n                <React.Suspense fallback={<Preloader/>}>\n                  <ProfileContainer />\n                </React.Suspense>\n              );\n            }}\n          />\n          <Route path=\"/users\" render={() => <UsersConteiner />} />\n          <Route path=\"/login\" render={() => <Login />} />\n          <Route path=\"/news\" render={() => <News />} />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  initialized: state.app.initialized,\n});\n\nlet AppConteiner = compose(\n  withRouter,\n  connect(mapStateToProps, { initializeApp })\n)(App);\n\nconst SamuraiJSApp = (props) => {\n  return (\n    <BrowserRouter>\n      <Provider store={store}>\n        <AppConteiner />\n      </Provider>\n    </BrowserRouter>\n  );\n};\n\nexport default SamuraiJSApp;\n","import * as serviceWorker from \"./serviceWorker\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport SamuraiJSApp from \"./App\";\n\nReactDOM.render(<SamuraiJSApp />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}